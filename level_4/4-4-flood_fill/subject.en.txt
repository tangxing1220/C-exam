Assignment name  : flood_fill
Expected files   : *.c, *.h
Allowed functions: -
--------------------------------------------------------------------------------

Write a function that takes in parameters a char** which will be a 2
dimensions area, a structure of type t_point which will give the length and
width of this area, and a structure of type t_point representing the
starting point coordinates.

Starting from the given 'begin' t_point, this function 'colors' an entire zone
of this area by replacing characters inside by the character 'F'.
A zone is an ensemble of the same character delimitated horizontally
and vertically by other characters.

The flood_fill function won't 'color' in diagonal.

The flood_fill function will be prototyped like this:
  void  flood_fill(char **tab, t_point size, t_point begin);

The t_point structure is available inside the "t_point.h" file attached to this
assignment. We will use our "t_point.h" for graduation.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  Example 1:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

$> cat test_main.c
#include "test_functions.h"
#include "flood_fill.h"

int main(void)
{
	char **area;
	t_point size = { 8, 5 };
	t_point begin = { 2, 1 };
	char *zone[] = {
		"11111111",
		"10001001",
		"10010001",
		"10110001",
		"11100001"
	};

	area = make_area(zone);
	print_tab(area);
	flood_fill(area, size, begin);
	putc('\n');
	print_tab(area);
	return (0);
}

$> gcc flood_fill.c test_main.c test_functions.c -o flood_fill ; ./flood_fill
1 1 1 1 1 1 1 1
1 0 0 0 1 0 0 1
1 0 0 1 0 0 0 1
1 0 1 1 0 0 0 1
1 1 1 0 0 0 0 1

1 1 1 1 1 1 1 1
1 F F F 1 0 0 1
1 F F 1 0 0 0 1
1 F 1 1 0 0 0 1
1 1 1 0 0 0 0 1
$>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  Example 2:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

$> cat test_main.c
  [...]

  t_point size = { 8, 5 };
	t_point begin = { 6, 1 };
	char *zone[] = {
		"11111111",
		"10001001",
		"10010001",
		"10110001",
		"11100001"
	};

	[...]

$> gcc flood_fill.c test_main.c test_functions.c -o flood_fill ; ./flood_fill
1 1 1 1 1 1 1 1
1 0 0 0 1 0 0 1
1 0 0 1 0 0 0 1
1 0 1 1 0 0 0 1
1 1 1 0 0 0 0 1

1 1 1 1 1 1 1 1
1 0 0 0 1 F F 1
1 0 0 1 F F F 1
1 0 1 1 F F F 1
1 1 1 F F F F 1
$>

